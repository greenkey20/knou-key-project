# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: devBack

permissions:
  contents: read

env:
  S3_BUCKET_NAME: knou-key-project

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./
      war-name: key-project

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Compose application-local yml file
        uses: actions/checkout@v3
      - name: Make application-local yml file
        run: touch ./src/main/resources/application-local.yml
      - name: Write contents into application-local yml file
        run: echo "${{ secrets.APPLICATION_LOCAL }}" > ./src/main/resources/application-local.yml
      - name: Print contents of application-local yml file
        run: cat ./src/main/resources/application-local.yml
      - uses: actions/upload-artifact@v3
        with:
          name: application-local.yml
          path: ./src/main/resources/application-local.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}

      - name: Build with Gradle
        run: ./gradlew build
        # uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        working-directory: ${{ env.working-directory }}

      - name: Change name of war file
        run: cp ./build/libs/${{ env.war-name }}-0.0.1-SNAPSHOT-plain.war ./build/libs/${{ env.war-name }}.war

      - name: Make zip file
        run: zip -r ./app-deploy.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload zip to S3
        run: aws s3 cp --region ap-northeast-2 ./app-deploy.zip s3://$S3_BUCKET_NAME/app-deploy.zip

      - name: Codedeploy deploys
        run: >
          aws deploy create-deployment --application-name knou4project
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name knou4project-group
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=app-deploy.zip